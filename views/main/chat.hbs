<!-- momentjs lib -->
<script src="https://cdn.jsdelivr.net/npm/moment@2.18.1/moment.min.js"></script>
<!-- vuejs -->
<script src="https://unpkg.com/vue"></script>
<!-- socketio -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.3/socket.io.slim.js"></script>
<!-- vue http package -->
<script src="https://cdn.jsdelivr.net/npm/vue-resource@1.3.4"></script>
<!-- font awesome for icons -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<!-- font -->
<link href="https://fonts.googleapis.com/css?family=Raleway" rel="stylesheet">
<style>
* {
    background-color: #FFF;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Raleway", sans-serif;
}

#send {
  background: #000;
  padding: 3px;
  position: fixed;
  bottom: 0;
  width: 100%;
}

#send input {
  border: 0;
  padding: 10px;
  width: 90%;
  margin-right: .5%;
  color: #FFF;
}

#send button {
  width: 9%;
  /*background: rgb(130, 224, 255);*/
  background: #e74c3c;
  color: white;
  font-weight: bold;
  border: none;
  padding: 10px;
  z-index: 3000;
}

#messages {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

ul {
  list-style-type: none;
}

#messages li {
  padding: 5px 10px;
}

#messages li:nth-child(odd) {
  background: #eee;
}

#messages {
  margin-bottom: 40px
}

.chat-history {
  margin: 3%;
  margin-bottom: 5%;
}

.gray {
  color: gray;
}
</style>

   
    <!-- end chat -->
    <script>
        let socket = io();
        var username = '';
       
        socket.on('user', function (data) {
                console.log('Client side user data', data.username);
                username = data.username;
                let app = new Vue({
                el: "#app",
                data: {
                    currentUser: username,
                    msg: "",
                    messages: [],
                    socket: io()
                },
                created() {

                    // init code
                    console.log("created");
                    // register event listener
                    this.socket.on("chatChannel", chat => {
                        console.log("received!");
                        this.messages.push(chat);
                        window.scrollTo(0, document.body.scrollHeight);
                    });

                    console.log("fetching chats...");
                    console.log("Username ", username);
                    this.fetchChat();
                },
                methods: {
                    /**
                        * On click send button, sends the message to chat room
                        */
                    send(event) {
                        let message = this.msg.trim();
                        let by = this.currentUser;

                        if (message.length === 0) return;

                        this.msg = "";
                        console.log("sending");

                        this.socket.emit("chatChannel", {
                            text: message,
                            by: by
                        });
                    },

                    /**
                        * fetches chat history from REST API
                        */
                    fetchChat() {
                        this.$http.get("/history").then(response => {
                            if (response.body.length > 0) {
                                // concatinate the reverse because the server sent the latest few in reverse order
                                this.messages = this.messages.concat(response.body.reverse());
                            }
                        }, err => {
                            console.error(err);
                        });
                    },
                    humanReadable(date) {
                        return moment(date).fromNow();
                    }
                }
            });
                
        });
      
        
        

    </script>